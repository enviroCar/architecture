version: "3"
services:

  ### Kafka Stack
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      zk_id: "1"
    #ports:
    #  - 2181:2181
    networks:
      - shared

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 5048576
      KAFKA_MAX_REQUEST_SIZE: 5048576
      KAFKA_MAX_PARTITION_FETCH_BYTES: 5048576
    #ports:
    #  - 9092:9092
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - shared

  ### ELK Stack
  elasticsearch:
    image: ${REGISTRY}/ec-base/elasticsearch:latest
    build:
      context: ./elasticsearch
      args:
        ELK_VERSION: ${ELK_VERSION}
    #ports:
    #  - 9200:9200
    #  - 9300:9300
    networks:
      - elk
    volumes:
    - esdata:/usr/share/elasticsearch/data
    environment:
    - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: ${REGISTRY}/ec-base/kibana:latest
    build:
      context: ./kibana/
      args:
        ELK_VERSION: ${ELK_VERSION}
    #ports:
    #  - 5601:5601
    environment:
    - ELASTICSEARCH_URL=elasticsearch:9200
    depends_on:
    - elasticsearch
    networks:
    - elk

  filebeat:
    image: ${REGISTRY}/ec-base/filebeat:latest
    build:
      context: ./filebeat
      args:
        ELK_VERSION: ${ELK_VERSION}
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch
    networks:
      - elk

  ftp:
    build: https://github.com/enviroCar/vsftpd-docker.git
    image: ${REGISTRY}/ec-base/ftp:latest
    ports:
      - "20:20"
      - "21:21"
      - "21100-21110:21100-21110"
    volumes:
      - caddy-data:/var/lib/caddy
      - ftp-data:/srv/ftp
    environment:
      - CERT_FILE=/var/lib/caddy/acme/acme-v02.api.letsencrypt.org/sites/processing.envirocar.org/processing.envirocar.org.crt
      - CERT_KEY_FILE=/var/lib/caddy/acme/acme-v02.api.letsencrypt.org/sites/processing.envirocar.org/processing.envirocar.org.key
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
      - PASV_ADDRESS=processing.envirocar.org
      - PASV_ADDR_RESOLVE=YES
      - FTP_USER_NAME=ftpadmin
      - FTP_USER_PASS=${FTP_PASSWORD}
      - ALLOW_ANON=YES
  networks:
    - shared

volumes:
  esdata:
    driver: local
  kafka-data:
    driver: local
  ftp-data:
    driver: local
  caddy-data:
    external: true

networks:
  shared:
    driver: bridge
  elk:
    driver: bridge
  eccicd_shared:
    external: true
  eccomponents_ecuserapi:
    external: true
  eccomponents_ecdataapi:
    external: true
